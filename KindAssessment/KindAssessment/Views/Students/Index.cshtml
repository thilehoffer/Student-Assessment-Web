@model AssessmentApp.WebClient.Models.StudentIndexViewModel


<input type="hidden" id="list-action" value="@Url.Action("List")" />
<input type="hidden" id="edit-action" value="@Url.Action("Edit")" />
<input type="hidden" id="add-action" value="@Url.Action("Add")" />

<div class="row">
    <div class="col-sm-4 ">
        @Html.LabelFor(m => m.SelectedClassId)<br />

        @(Html.Kendo().DropDownListFor(m => m.SelectedClassId)
          .IgnoreCase(true)
          .DataTextField("Text")
          .DataValueField("Value")
          .Events(e => e.Change("studentIndex.selectedClassChange"))
          .BindTo(@Model.Classes)
          .HtmlAttributes(new { style = "width:100%;"})
        )
    </div>
    <div class="clearfix visible-xs"></div>
    <div class="col-sm-12 ">
        <div class="pull-right">
            <input type="submit" class="btn btn-default btn-sm" value="Active Only" id="ActiveSwitch" />
            <br />
        </div>
    </div>
    <div class="clearfix visible-xs"></div>
    <div class="col-sm-12" style="padding-top:5px; padding-bottom:5px;">
        @(Html.Kendo().Grid<AssessmentApp.Data.Models.Student>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(p => p.ClassName).Title("Class Name");
            columns.Bound(p => p.StudentName).Title("Student Name");
            columns.Bound(p => p.StudentDateOfBirth).Title("DOB").ClientTemplate("#:StudentDateOfBirthString#");
            columns.Bound(p => p.Active);
            columns.Bound(p => p.Id).Title("").ClientTemplate($"<a href='{Url.Action("Edit")}/#:Id#'>Edit</a>").Sortable(false);
        }
        )
         .Pageable().Selectable(s => s.Enabled(false))
        .Sortable().DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("List", "Students").Type(HttpVerbs.Post).Data("studentIndex.getClassId"))
            .PageSize(10)
            .ServerOperation(false)

        )

        )
    </div>
    <div class="clearfix visible-xs"></div>
    <div class="col-sm-12 ">
        @Html.ActionLink("Add New Student", "Add")
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        var studentIndex = {};
        studentIndex.templates = {};
        studentIndex.selectedClassId =  @(Model.SelectedClassId.HasValue ? Model.SelectedClassId.Value : 0);

        studentIndex.ToggleButton = function(){
            if (studentIndex.selectedClassId > 0){
                $('#ActiveSwitch').show();
            }else{
                $('#ActiveSwitch').hide();
            }
        }

        //function to be called from drop down change
        studentIndex.selectedClassChange = function  () {

            studentIndex.selectedClassId = this.value();
            var $grid = $('#grid').data('kendoGrid');
            $grid.dataSource.filter([]);
            $('#ActiveSwitch').val('Active Only');
            $grid.dataSource.read();
            $grid.refresh();
            studentIndex.ToggleButton();



        }
        studentIndex.getClassId = function () {
            return {
                id: studentIndex.selectedClassId
            }
        };

        $(document).ready(function () {
            //VARIABLE

            studentIndex.selectedClassId  = $('#SelectedClassId').val(); // This is needed to have the grid refresh on change of drop down

            studentIndex.ToggleButton();

            //Functions
            function filterGrid(all) {
                var $grid = $('#grid').data('kendoGrid');
                var ds = $grid.dataSource;
                if (!all) {
                    ds.filter([{
                        filters: [{ field: "Active", operator: "equals", value: true }]
                    }]);

                } else {
                    ds.filter([]);
                }
            }

            $('#ActiveSwitch').click(function (e) {
                e.preventDefault();
                var text = $(this).val();
                if (text === 'Active Only') {
                    filterGrid(false);
                    $(this).val("Show All");
                } else {
                    filterGrid(true);
                    $(this).val("Active Only");
                }

            });

        });
    </script>
}